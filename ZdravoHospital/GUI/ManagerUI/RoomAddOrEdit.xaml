<Window x:Class="ZdravoHospital.GUI.ManagerUI.RoomAddOrEdit"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ZdravoHospital.GUI.ManagerUI"
        xmlns:validation="clr-namespace:ZdravoHospital.GUI.ManagerUI.ValidationRules"
        xmlns:converters="clr-namespace:ZdravoHospital.GUI.ManagerUI.Converters"
        mc:Ignorable="d"
        Title="" 
        SizeToContent="WidthAndHeight"
        WindowStartupLocation="CenterScreen"
        ResizeMode="NoResize"
        >
    <Grid Height="500" Width="450" Background="Beige">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="1.5*"/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition Height="0.5*"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        
        <!-- Error adorners -->
        <AdornerDecorator Grid.Row="0" Grid.ColumnSpan="2" Margin="10,10,10,5">
            <TextBlock Text="{Binding ElementName=IdTextBox, Path=(Validation.Errors).CurrentItem.ErrorContent}" FontWeight="SemiBold" FontStyle="Italic" TextAlignment="Center" Foreground="Red" FontSize="18" HorizontalAlignment="Center" TextWrapping="Wrap"/>
        </AdornerDecorator>
        <AdornerDecorator Grid.Row="0" Grid.ColumnSpan="2" Margin="10,10,10,5">
            <TextBlock Text="{Binding ElementName=NameTextBox, Path=(Validation.Errors).CurrentItem.ErrorContent}" FontWeight="SemiBold" FontStyle="Italic" TextAlignment="Center" Foreground="Red" FontSize="18" HorizontalAlignment="Center" TextWrapping="Wrap">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=IdTextBox, Path=(Validation.HasError)}" Value="True">
                                <Setter Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </AdornerDecorator>


        <!-- Labels -->
        <Label Grid.Column="0" Grid.Row="1" Content="ID:" Width="90" Height="35" FontSize="18" HorizontalAlignment="Center" VerticalAlignment="Top"/>
        <Label Grid.Column="0" Grid.Row="2" Content="Name:" Width="90" Height="35" FontSize="18" HorizontalAlignment="Center" VerticalAlignment="Top"/>
        <Label Grid.Column="0" Grid.Row="3" Content="Type:"  Width="90" Height="35" FontSize="18" HorizontalAlignment="Center" VerticalAlignment="Top"/>
        <Label Grid.Column="0" Grid.Row="4" Content="Available:" Width="90" Height="35" FontSize="18" HorizontalAlignment="Center" VerticalAlignment="Top"/>
        
        <!-- Input area -->
        <TextBox x:Name="IdTextBox" Grid.Row="1" Grid.Column="1" FontSize="18" HorizontalAlignment="Left" Width="100" Height="35" VerticalAlignment="Top" VerticalContentAlignment="Center">
            <TextBox.Text>
                <Binding Path="Id" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <validation:RoomIdValidationRule ValidationStep="RawProposedValue"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
            <TextBox.Style>
                <Style TargetType="TextBox">
                    <Setter Property="BorderBrush" Value="#FFABADB3"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=IdTextBox, Path=(Validation.HasError)}" Value="True">
                            <Setter Property="BorderBrush" Value="Red"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>


        <TextBox x:Name="NameTextBox" Grid.Row="2" Grid.Column="1" FontSize="18" Width="230" HorizontalAlignment="Left" VerticalAlignment="Top" Height="35" VerticalContentAlignment="Center">
            <TextBox.Text>
                <Binding Path="RoomName" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <validation:RoomNamesValidationRule ValidationStep="RawProposedValue"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
            <TextBox.Style>
                <Style TargetType="TextBox">
                    <Setter Property="BorderBrush" Value="#FFABADB3"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=NameTextBox, Path=(Validation.HasError)}" Value="True">
                            <Setter Property="BorderBrush" Value="Red"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <ComboBox x:Name="TypeComboBox" Grid.Row="3" Grid.Column="1" Text="{Binding Path=RoomType, Converter={converters:RoomTypeConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontSize="18" Width="230" HorizontalAlignment="Left" VerticalAlignment="Top" Height="35" VerticalContentAlignment="Center">
            <ComboBoxItem>APPOINTMENT</ComboBoxItem>
            <ComboBoxItem>BEDROOM</ComboBoxItem>
            <ComboBoxItem>OPERATING</ComboBoxItem>
            <ComboBoxItem>STORAGE</ComboBoxItem>
            <ComboBoxItem>EMERGENCY</ComboBoxItem>
        </ComboBox>

        <Grid Grid.Row="4" Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <RadioButton x:Name="YesRadioButton" Grid.Column="0" Height="20" Width="50" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="18" GroupName="YesNo" Content="Yes" Margin="10,0,0,0" PreviewKeyDown="YesRadioButton_PreviewKeyDown"/>
            <RadioButton x:Name="NoRadioButton" Grid.Column="1" FontSize="18" Height="20" Width="50" HorizontalAlignment="Left" VerticalAlignment="Top" GroupName="YesNo" Content="No" Margin="10,0,0,0" PreviewKeyDown="NoRadioButton_PreviewKeyDown"/>
        </Grid>
        
        <!-- Buttons -->
        <Grid Grid.Row="6" Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Button x:Name="ConfirmButton" Grid.Column="0" Background="#bec4c2" FontSize="18" Content="Confirm" Margin="10" Click="ConfirmButton_Click">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="IsEnabled" Value="False" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=IdTextBox}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True"/>
                            </MultiDataTrigger>
                            <DataTrigger Binding="{Binding Path=Text, ElementName=NameTextBox}" Value="">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=NameTextBox}" Value="True">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=Text, ElementName=IdTextBox}" Value="0">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button x:Name="CancelButton" Grid.Column="1" Background="beige" FontSize="18" Content="Cancel" Margin="10" Click="CancelButton_Click"/>

        </Grid>

    </Grid>
</Window>
