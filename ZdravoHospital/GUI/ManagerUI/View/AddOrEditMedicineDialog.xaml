<Window x:Class="ZdravoHospital.GUI.ManagerUI.View.AddOrEditMedicineDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ZdravoHospital.GUI.ManagerUI.View"
        xmlns:validation="clr-namespace:ZdravoHospital.GUI.ManagerUI.ValidationRules"
        xmlns:converters="clr-namespace:ZdravoHospital.GUI.ManagerUI.Converters"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        Title="{Binding Title}"
        SizeToContent="WidthAndHeight"
        WindowStartupLocation="CenterScreen"
        ResizeMode="NoResize">
    <Grid Height="650" Width="470" Background="Beige">
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="0.5*"/>
            <RowDefinition Height="0.5*"/>
            <RowDefinition Height="0.5*"/>
            <RowDefinition Height="0.75*"/>
            <RowDefinition Height="2.25*"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>

        <!-- Error adorners -->
        <AdornerDecorator Grid.Row="0" Grid.ColumnSpan="2" Margin="10,10,10,5">
            <TextBlock Text="{Binding ElementName=NameTextBox, Path=(Validation.Errors).CurrentItem.ErrorContent}" FontWeight="SemiBold" FontStyle="Italic" TextAlignment="Center" Foreground="Red" FontSize="18" HorizontalAlignment="Center" TextWrapping="Wrap"/>
        </AdornerDecorator>
        <AdornerDecorator Grid.Row="0" Grid.ColumnSpan="2" Margin="10,10,10,5">
            <TextBlock Text="{Binding ElementName=SupplierTextBox, Path=(Validation.Errors).CurrentItem.ErrorContent}" FontWeight="SemiBold" FontStyle="Italic" TextAlignment="Center" Foreground="Red" FontSize="18" HorizontalAlignment="Center" TextWrapping="Wrap">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=NameTextBox, Path=(Validation.HasError)}" Value="True">
                                <Setter Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </AdornerDecorator>

        <Label Grid.Row="1" FontSize="18" Margin="35,0,20,0" HorizontalAlignment="Left" Content="Name:"/>

        <TextBox x:Name="NameTextBox" IsEnabled="{Binding Path=IsAdder}" Grid.Row="1" Grid.Column="1" FontSize="18" Margin="10,0,20,0" Height="35" Width="150" HorizontalAlignment="Left" VerticalAlignment="Top" VerticalContentAlignment="Center">
            <TextBox.Text>
                <Binding Path="Medicine.MedicineName" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <validation:MedicineNameValidationRule ValidationStep="RawProposedValue"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
            <TextBox.Style>
                <Style TargetType="TextBox">
                    <Setter Property="BorderBrush" Value="#FFABADB3"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=NameTextBox, Path=(Validation.HasError)}" Value="True">
                            <Setter Property="BorderBrush" Value="Red"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <Label Grid.Row="2" FontSize="18" Margin="35,0,0,0" HorizontalAlignment="Left" Content="Supplier:"/>

        <TextBox x:Name="SupplierTextBox" Grid.Row="2" IsEnabled="{Binding Path=CanEdit}" Grid.Column="1" FontSize="18" Margin="10,0,20,0" Height="35" Width="150" HorizontalAlignment="Left" VerticalAlignment="Top" VerticalContentAlignment="Center">
            <TextBox.Text>
                <Binding Path="Medicine.Supplier" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <validation:InventoryNameSupplierValidationRule ValidationStep="RawProposedValue"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
            <TextBox.Style>
                <Style TargetType="TextBox">
                    <Setter Property="BorderBrush" Value="#FFABADB3"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=SupplierTextBox, Path=(Validation.HasError)}" Value="True">
                            <Setter Property="BorderBrush" Value="Red"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <Label Grid.Row="3" FontSize="18" Margin="35,0,20,0" HorizontalAlignment="Left" Content="Status:"/>

        <Label Grid.Row="3" FontSize="18" Grid.Column="1" Margin="10,0,20,0" Content="{Binding Medicine.Status, Mode=TwoWay, Converter={converters:MedicineStatusConverter}}"/>

        <Button x:Name="AddIngredientButton" Grid.Row="4" Grid.Column="1"  Width="175" Height="50" 
                HorizontalAlignment="Center" VerticalAlignment="Center" Background="#bec4c2" Command="{Binding AddIngredientCommand}">
            <StackPanel Orientation="Horizontal">
                <Image Source="../../../Images/ManagerUI/plus.png" Width="30"/>
                <Separator Visibility="Hidden" Width="10" />
                <TextBlock Text="Add ingredient" Width="200" FontSize="18" VerticalAlignment="Center"/>
            </StackPanel>
        </Button>

        <DataGrid x:Name="IngredientsTable" KeyboardNavigation.TabNavigation="Local" 
                  HeadersVisibility="Column" Grid.Row="5" Grid.ColumnSpan="2" Margin="20" AlternatingRowBackground="LightBlue" 
                  FontSize="18" RowBackground="LightYellow" IsReadOnly="True" AutoGenerateColumns="False" 
                  SelectedItem="{Binding Path=Ingredient}" IsEnabled="{Binding Path=CanEdit}"
                  ItemsSource="{Binding Ingredients, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" SelectionMode="Single" 
                  GotFocus="IngredientsTable_GotFocus" PreviewKeyDown="IngredientsTable_PreviewKeyDown">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Ingredient name" Binding="{Binding IngredientName}" Width="*"/>
            </DataGrid.Columns>
        </DataGrid>

        <!-- Buttons -->

        <Grid Grid.Row="7" Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Button x:Name="ConfirmButton" Grid.Column="0" Background="#bec4c2" FontSize="18" Content="Confirm" 
                    Height="52" Width="105" Margin="0,0,10,0" HorizontalAlignment="Right" Command="{Binding ConfirmCommand}">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="IsEnabled" Value="True"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=NameTextBox, Path=Text}" Value="">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=NameTextBox, Path=(Validation.HasError)}" Value="True">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=SupplierTextBox, Path=Text}" Value="">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=SupplierTextBox, Path=(Validation.HasError)}" Value="True">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=Ingredients.Count}" Value="0">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:CallMethodAction MethodName="Close"
                                            TargetObject="{Binding RelativeSource={RelativeSource
                                                  Mode=FindAncestor,
                                                  AncestorType=Window}}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <Button x:Name="CancelButton" Grid.Column="1" Background="beige" FontSize="18" Content="Cancel" Height="52" Width="105" HorizontalAlignment="Right" Margin="0,0,20,0">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:CallMethodAction MethodName="Close"
                                            TargetObject="{Binding RelativeSource={RelativeSource
                                                  Mode=FindAncestor,
                                                  AncestorType=Window}}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>

        </Grid>

    </Grid>
</Window>
