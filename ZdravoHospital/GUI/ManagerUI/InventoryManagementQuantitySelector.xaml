<Window x:Class="ZdravoHospital.GUI.ManagerUI.InventoryManagementQuantitySelector"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:ZdravoHospital.GUI.ManagerUI"
        xmlns:validation="clr-namespace:ZdravoHospital.GUI.ManagerUI.ValidationRules"
        xmlns:converters="clr-namespace:ZdravoHospital.GUI.ManagerUI.Converters"
        mc:Ignorable="d"
        Title="Select quantity" 
        SizeToContent="WidthAndHeight"
        WindowStartupLocation="CenterScreen">
    <Grid Width="400" Height="400" Background="Beige">
        <Grid.RowDefinitions>
            <RowDefinition Height="100"/>
            <RowDefinition/>
            <RowDefinition Height="100"/>
        </Grid.RowDefinitions>

        <TextBlock x:Name="TextLabel" FontSize="18" Text="{Binding Path=DefinitionText, Mode=TwoWay}" Margin="10,10,10,5" TextAlignment="Center" TextWrapping="Wrap"/>

        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="150"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Label Content="Quantity:" FontSize="18" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="20,0,0,0"/>

                <TextBox x:Name="QuantityTextBox" FontSize="18" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="20,0,0,0" Grid.Column="1" Width="70" Height="30">
                    <TextBox.Resources>
                        <validation:MaxInventoryBindingProxy x:Key="proxy" Data="{Binding}"/>
                    </TextBox.Resources>
                    <TextBox.Text>
                        <Binding Path="EnteredQuantity" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validation:QuantityValidationRule ValidationStep="RawProposedValue">
                                    <validation:QuantityValidationRule.Wrapper>
                                        <validation:MaxInventoryWrapper Max="{Binding Path=Data.MaxInventory, Source={StaticResource proxy}}"/>
                                    </validation:QuantityValidationRule.Wrapper>
                                </validation:QuantityValidationRule>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                    <Validation.ErrorTemplate>
                        <ControlTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <AdornedElementPlaceholder Grid.Column="0" x:Name="ErrorField"/>
                                <TextBlock Grid.Column="1" Text="{Binding [0].ErrorContent}" Foreground="Red" FontSize="18" HorizontalAlignment="Left" VerticalAlignment="Center" Height="35"/>
                            </Grid>
                        </ControlTemplate>
                    </Validation.ErrorTemplate>
                </TextBox>
            </Grid>

            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="150"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Label Content="Date:" FontSize="18" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="20,0,0,0">
                    <Label.Style>
                        <Style TargetType="{x:Type Label}">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsStatic}" Value="False">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>

                <DatePicker x:Name="DatePicker" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="20,0,0,0" FontSize="18" SelectedDate="{Binding ChosenDate}" DisplayDateStart="{x:Static sys:DateTime.Today}" PreviewKeyDown="DatePicker_PreviewKeyDown">
                    <DatePicker.Style>
                        <Style TargetType="{x:Type DatePicker}">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsStatic}" Value="False">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DatePicker.Style>
                </DatePicker>
            </Grid>

            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="150"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Label Content="Time:" FontSize="18" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="20,0,0,0">
                    <Label.Style>
                        <Style TargetType="{x:Type Label}">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsStatic}" Value="False">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>

                <TextBox x:Name="TimeTextBox" Grid.Column="1" FontSize="18" HorizontalAlignment="Left" Width="100" Height="30" VerticalAlignment="Center" VerticalContentAlignment="Center" Margin="20,0,0,0">
                    <TextBox.Resources>
                        <validation:PassedTimeBindingProxy x:Key="proxy" Data="{Binding}"/>
                    </TextBox.Resources>
                    <TextBox.Text>
                        <Binding Path="InputTime" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validation:TimeInputValidationRule ValidationStep="RawProposedValue">
                                    <validation:TimeInputValidationRule.Wrapper>
                                        <validation:PassedTimeWrapper PassedTime="{Binding Data.ChosenDate, Source={StaticResource proxy}}"/>
                                    </validation:TimeInputValidationRule.Wrapper>  
                                </validation:TimeInputValidationRule>
                                <validation:EmptyStringValidationRule ValidationStep="RawProposedValue"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                    <Validation.ErrorTemplate>
                        <ControlTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <AdornedElementPlaceholder Grid.Column="0" x:Name="ErrorField"/>
                                <TextBlock Grid.Column="1" Text="{Binding [0].ErrorContent}" Foreground="Red" FontSize="18" HorizontalAlignment="Left" VerticalAlignment="Center" Height="35"/>
                            </Grid>
                        </ControlTemplate>
                    </Validation.ErrorTemplate>
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsStatic}" Value="False">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>

            </Grid>
            
        </Grid>
        
        

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Button x:Name="ConfirmButton" FontSize="18" Content="Confirm" Background="#bec4c2" Height="52" Width="100" Click="ConfirmButton_Click">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="IsEnabled" Value="True"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=QuantityTextBox, Path=Text}" Value="">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=QuantityTextBox, Path=Text}" Value="0">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=QuantityTextBox, Path=(Validation.HasError)}" Value="True">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=TimeTextBox, Path=(Validation.HasError)}" Value="True">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=DatePicker, Path=SelectedDate}" Value="">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=TimeTextBox, Path=Text}" Value="">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <Button x:Name="CancelButton" Grid.Column="1" FontSize="18" Background="Beige" Height="52" Width="100" Content="Cancel" Click="CancelButton_Click"/>
        </Grid>
    </Grid>
</Window>
