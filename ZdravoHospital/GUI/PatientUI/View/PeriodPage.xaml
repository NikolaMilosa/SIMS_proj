<Page x:Class="ZdravoHospital.GUI.PatientUI.View.PeriodPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:ZdravoHospital.GUI.PatientUI"
      xmlns:model="clr-namespace:ZdravoHospital.GUI.PatientUI.DTOs"
      mc:Ignorable="d" 
      d:DesignHeight="708" d:DesignWidth="804"
      Title="PeriodPage"
      >
    <Page.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>
    <Border CornerRadius="20" Background="White">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="20"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="100"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="20"/>
            </Grid.RowDefinitions>

            <StackPanel Grid.Column="1" Grid.Row="0" Orientation="Horizontal"  >
                <Image Source="/Images/PatientUI/appointmentIconBlack.png" Margin="180,0,0,0" Height="70"></Image>
                <TextBlock Text="My appointments" FontSize="36" Margin="20,20,0,0" FontWeight="Bold"></TextBlock>
                <Button Background="Transparent" BorderBrush="Transparent"
                        Command="{Binding Path=SwitchViewCommand}"
                        Margin="40,0,0,50">
                    <StackPanel Orientation="Horizontal" Height="50" >
                        <Image Source="/Images/PatientUI/calendarViewIcon.png" Margin="0,0,0,0" Width="32" Height="32"></Image>
                        <TextBlock Text="Calendar view" Foreground="Black" FontWeight="Bold" FontSize="14" Margin="0,15,0,0"></TextBlock>
                    </StackPanel>
                </Button>
            </StackPanel>

            <DataGrid GridLinesVisibility="Horizontal" AutoGenerateColumns="False" IsSynchronizedWithCurrentItem="True" IsReadOnly="True"
                      x:Name="AppointmentDataGrid" Grid.Row="1" Grid.Column="1" Margin="0,0,0,0" 
                      ItemsSource="{Binding PeriodDTOs}"
                      SelectedItem="{Binding SelectedPeriodDTO,Mode=OneWayToSource}">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Date" Width="*" Binding="{Binding Path=Date, StringFormat=d}"></DataGridTextColumn>
                    <DataGridTextColumn Header="Time" Width="*" Binding="{Binding Path=Date, StringFormat=t}"></DataGridTextColumn>
                    <DataGridTextColumn Header="Doctor's&#x0a; name" Width="120" Binding="{Binding Path=DoctorName}"></DataGridTextColumn>
                    <DataGridTextColumn Header="Doctor's&#x0a;surname" Width="120" Binding="{Binding Path=DoctorSurname}"></DataGridTextColumn>
                    <DataGridTextColumn Header=" Room&#x0a;number" Width="*" Binding="{Binding Path=RoomNumber}"></DataGridTextColumn>
                    <DataGridTextColumn Header="Type" Width="100" Binding="{Binding Path=PeriodType}"></DataGridTextColumn>
                    
                    <DataGridTemplateColumn Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate >
                                <Button
                                     Style="{StaticResource ButtonStyle1}"
                                    Command="{Binding DataContext.EditPeriodCommand, ElementName=AppointmentDataGrid}"
                                        BorderBrush="Transparent" Background="Transparent"
                                        Name="editButton" Content="Edit" FontWeight="Bold"
                                         />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button 
                                    Style="{StaticResource ButtonStyle1}"
                                    Command="{Binding DataContext.RemovePeriodCommand, ElementName=AppointmentDataGrid}"  BorderBrush="Transparent" Background="Transparent"
                                        Name="removeButton" Content="Remove" FontWeight="Bold"  />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                </DataGrid.Columns>
                
                <DataGrid.Resources>
                    <Style TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Background" Value="DimGray"></Setter>
                        <Setter Property="FontSize" Value="20"></Setter>
                        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                        <Setter Property="Height" Value="75"></Setter>
                    </Style>
                </DataGrid.Resources>

                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                        <Setter Property="MinHeight" Value="70"></Setter>
                    </Style>
                </DataGrid.RowStyle>

                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DataGridCell}">
                                    <Grid Background="{TemplateBinding Background}">
                                        <ContentPresenter VerticalAlignment="Center"/>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DataGrid.CellStyle>

            </DataGrid>
        </Grid>
    </Border>
   
</Page>
